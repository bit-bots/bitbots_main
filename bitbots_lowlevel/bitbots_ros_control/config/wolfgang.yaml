wolfgang_hardware_interface:
  ros__parameters:
    control_loop_hz: 500.0

    port_info:
      port0:
        device_file: /dev/ttyUSB0
        baudrate: 1000000
        protocol_version: 2
      port1:
        device_file: /dev/ttyUSB1
        baudrate: 1000000
        protocol_version: 2
      port2:
        device_file: /dev/ttyUSB2
        baudrate: 1000000
        protocol_version: 2
      port3:
        device_file: /dev/ttyUSB3
        baudrate: 1000000
        protocol_version: 2

    # specification of the connected dynamixel servos
    servos:
      # specifies which information should be read
      read_position: true
      read_velocity: false
      read_effort: false
      read_pwm: false
      read_volt_temp: true # this also corresponds for the error byte

      VT_update_rate: 50 # how many normal (position) reads have to be performed before one time the temperature, voltage and error is read
      warn_temp: 55.0
      warn_volt: 14.0

      control_mode: position
      auto_torque: true

      set_ROM_RAM: true # set the following values on startup to all motors
      start_delay: 0.5 # delay after the motors are turned on until values are written, in seconds

      ROM_RAM_DEFAULT:
        # all names of parameters have to be the same as on the dynamixel table (see dynamixel_workbench_toolbox/src/dynamixel_item.cpp )
        # all values are directly values this means not Celsius or rad but the value used by the servo firmware see datasheet
        # ROM
        Return_Delay_Time: 0 # this is a stupid function which has always to be zero or nothing will work correctly anymore
        Temperature_Limit: 60 # [about 1 deg C]
        Max_Voltage_Limit: 160 #[About 0.1V]
        Min_Voltage_Limit: 95 #[About 0.1V]
        PWM_Limit: 885 # 885 = 100%
        #Current_Limit: 2047 #[ 3.36 mA] #currently not used since MX-64 and MX-106 have different max values
        #todo acceleration limit does not exist as register?
        Acceleration_Limit: 32767 # [214.577 Rev/min2]
        Velocity_Limit: 1023 # [0.229rpm]
        Max_Position_Limit: 4095 # [0.088 deg]
        Min_Position_Limit : 0 # [0.088 deg]
        # RAM
        Status_Return_Level: 2 # 0 status for all instructions(not sync or bulk), 1 ping and read, 2 only ping
        Velocity_I_Gain: 1920 # [/ 65,536]
        Velocity_P_Gain: 100 # [/128]
        Position_D_Gain: 0 #2800 # [/16] 0~16,383
        Position_I_Gain: 0 #180000 # [/ 65,536] 0~16,383
        #If robot starts to tremble, reduce Position_P_Gain
        Position_P_Gain: 1200 #1100 # [/ 128] 0~16,383
        Feedforward_2nd_Gain: 0 # [/4]
        Feedforward_1st_Gain: 0 # [/4]
        Profile_Acceleration: 0 # 0 for infinite
        Profile_Velocity: 0 # 0 for infinite

      ROM_RAM_ARMS:
        # all names of parameters have to be the same as on the dynamixel table (see dynamixel_workbench_toolbox/src/dynamixel_item.cpp )
        # all values are directly values this means not Celsius or rad but the value used by the servo firmware see datasheet
        # ROM
        Return_Delay_Time: 0 # this is a stupid function which has always to be zero or nothing will work correctly anymore
        Temperature_Limit: 60 # [about 1 deg C]
        Max_Voltage_Limit: 160 #[About 0.1V]
        Min_Voltage_Limit: 95 #[About 0.1V]
        PWM_Limit: 885 # 885 = 100%
        #Current_Limit: 2047 #[ 3.36 mA] #currently not used since MX-64 and MX-106 have different max values
        #todo acceleration limit does not exist as register?
        Acceleration_Limit: 32767 # [214.577 Rev/min2]
        Velocity_Limit: 1023 # [0.229rpm]
        Max_Position_Limit: 4095 # [0.088 deg]
        Min_Position_Limit : 0 # [0.088 deg]
        # RAM
        Status_Return_Level: 2 # 0 status for all instructions(not sync or bulk), 1 ping and read, 2 only ping
        Velocity_I_Gain: 1920 # [/ 65,536]
        Velocity_P_Gain: 100 # [/128]
        Position_D_Gain: 0 #2800 # [/16] 0~16,383
        Position_I_Gain: 0 #180000 # [/ 65,536] 0~16,383
        #If robot starts to tremble, reduce Position_P_Gain
        Position_P_Gain: 800 #1100 # [/ 128] 0~16,383
        Feedforward_2nd_Gain: 0 # [/4]
        Feedforward_1st_Gain: 0 # [/4]
        Profile_Acceleration: 0 # 0 for infinite
        Profile_Velocity: 0 # 0 for infinite

      ROM_RAM_KNEES: # Because we use X-Series servos for the knees, we need to set different values
        # all names of parameters have to be the same as on the dynamixel table (see dynamixel_workbench_toolbox/src/dynamixel_item.cpp )
        # all values are directly values this means not Celsius or rad but the value used by the servo firmware see datasheet
        # ROM
        Return_Delay_Time: 0 # this is a stupid function which has always to be zero or nothing will work correctly anymore
        Temperature_Limit: 60 # [about 1 deg C]
        Max_Voltage_Limit: 160 #[About 0.1V]
        Min_Voltage_Limit: 95 #[About 0.1V]
        PWM_Limit: 885 # 885 = 100%
        #Current_Limit: 2047 #[ 3.36 mA] #currently not used since MX-64 and MX-106 have different max values
        #todo acceleration limit does not exist as register?
        Acceleration_Limit: 32767 # [214.577 Rev/min2]
        Velocity_Limit: 1023 # [0.229rpm]
        Max_Position_Limit: 4095 # [0.088 deg]
        Min_Position_Limit : 0 # [0.088 deg]
        # RAM
        Status_Return_Level: 2 # 0 status for all instructions(not sync or bulk), 1 ping and read, 2 only ping
        Velocity_I_Gain: 1920 # [/ 65,536]
        Velocity_P_Gain: 100 # [/128]
        Position_D_Gain: 0 #2800 # [/16] 0~16,383
        Position_I_Gain: 0 #180000 # [/ 65,536] 0~16,383
        #If robot starts to tremble, reduce Position_P_Gain
        Position_P_Gain: 4000 #1100 # [/ 128] 0~16,383
        Feedforward_2nd_Gain: 0 # [/4]
        Feedforward_1st_Gain: 0 # [/4]
        Profile_Acceleration: 0 # 0 for infinite
        Profile_Velocity: 0 # 0 for infinite

      ROM_RAM_HEAD: # Because we use X-Series servos for the knees, we need to set different values
        # all names of parameters have to be the same as on the dynamixel table (see dynamixel_workbench_toolbox/src/dynamixel_item.cpp )
        # all values are directly values this means not Celsius or rad but the value used by the servo firmware see datasheet
        # ROM
        Return_Delay_Time: 0 # this is a stupid function which has always to be zero or nothing will work correctly anymore
        Temperature_Limit: 60 # [about 1 deg C]
        Max_Voltage_Limit: 160 #[About 0.1V]
        Min_Voltage_Limit: 95 #[About 0.1V]
        PWM_Limit: 885 # 885 = 100%
        #Current_Limit: 2047 #[ 3.36 mA] #currently not used since MX-64 and MX-106 have different max values
        #todo acceleration limit does not exist as register?
        Acceleration_Limit: 32767 # [214.577 Rev/min2]
        Velocity_Limit: 1023 # [0.229rpm]
        Max_Position_Limit: 4095 # [0.088 deg]
        Min_Position_Limit : 0 # [0.088 deg]
        # RAM
        Status_Return_Level: 2 # 0 status for all instructions(not sync or bulk), 1 ping and read, 2 only ping
        Velocity_I_Gain: 1920 # [/ 65,536]
        Velocity_P_Gain: 100 # [/128]
        Position_D_Gain: 0 #2800 # [/16] 0~16,383
        Position_I_Gain: 0 #180000 # [/ 65,536] 0~16,383
        #If robot starts to tremble, reduce Position_P_Gain
        Position_P_Gain: 500 #1100 # [/ 128] 0~16,383
        Feedforward_2nd_Gain: 0 # [/4]
        Feedforward_1st_Gain: 0 # [/4]
        Profile_Acceleration: 0 # 0 for infinite
        Profile_Velocity: 0 # 0 for infinite

    imu:
      do_adaptive_gain: False
      do_bias_estimation: False
      bias_alpha: 0.01
      accel_gain: 0.001

    device_info:
      Core:
        id: 42
        model_number: 0xABBA
        read_rate: 10
        interface_type: CORE
      LEDs_core:
        id: 42
        model_number: 0xABBA
        interface_type: LED
        number_of_LEDs: 3
        start_number: 0
      IMU_torso:
        id: 241
        topic: imu/data
        frame: imu_frame
        model_number: 0xBAFF
        interface_type: IMU
      Buttons:
        id: 241
        model_number: 0xBAFF
        interface_type: Button
        topic: /buttons
        read_rate: 50
      LEDs:
        id: 241
        model_number: 0xBAFF
        interface_type: LED
        number_of_LEDs: 3
        start_number: 3
      # Removed head imu at worldcup due to motorbus issues
      #IMU_head:
      #  id: 242
      #  topic: imu_head/data
      #  frame: imu_frame_2
      #  model_number: 0xBAFF
      #  interface_type: IMU
      RShoulderPitch:
        id: 1
        model_number: 311
        mounting_offset: 0.0
        joint_offset: 0.0
        group: ARMS
      LShoulderPitch:
        id: 2
        model_number: 311
        mounting_offset: 0.0
        joint_offset: 0.0
        group: ARMS
      RShoulderRoll:
        id: 3
        model_number: 311
        mounting_offset: 0.0
        joint_offset: 0.0
        group: ARMS
      LShoulderRoll:
        id: 4
        model_number: 311
        mounting_offset: 0.0
        joint_offset: 0.0
        group: ARMS
      RElbow:
        id: 5
        model_number: 311
        mounting_offset: 0.0
        joint_offset: 0.0
        group: ARMS
      LElbow:
        id: 6
        model_number: 311
        mounting_offset: 0.0
        joint_offset: 0.0
        group: ARMS
      RHipYaw:
        id: 7
        model_number: 321
        mounting_offset: 0.0
        joint_offset: 0.0
      LHipYaw:
        id: 8
        model_number: 321
        mounting_offset: 0.0
        joint_offset: 0.0
      RHipRoll:
        id: 9
        model_number: 321
        mounting_offset: 0.0
        joint_offset: 0.0
      LHipRoll:
        id: 10
        model_number: 321
        mounting_offset: 0.0
        joint_offset: 0.0
      RHipPitch:
        id: 11
        model_number: 321
        mounting_offset: 0.0
        joint_offset: 0.0
      LHipPitch:
        id: 12
        model_number: 321
        mounting_offset: 0.0
        joint_offset: 0.0
      RKnee:
        id: 13
        model_number: 1100
        mounting_offset: 0.0
        joint_offset: 0.0
        group: KNEES
      LKnee:
        id: 14
        model_number: 1100
        mounting_offset: 0.0
        joint_offset: 0.0
        group: KNEES
      RAnklePitch:
        id: 15
        model_number: 321
        mounting_offset: 0.0
        joint_offset: 0.0
      LAnklePitch:
        id: 16
        model_number: 321
        mounting_offset: 0.0
        joint_offset: 0.0
      RAnkleRoll:
        id: 17
        model_number: 321
        mounting_offset: 0.0
        joint_offset: 0.0
      LAnkleRoll:
        id: 18
        model_number: 321
        mounting_offset: 0.0
        joint_offset: 0.0
      HeadPan:
        id: 19
        model_number: 311
        mounting_offset: 0.0
        joint_offset: 0.0
        group: HEAD
      HeadTilt:
        id: 20
        model_number: 311
        mounting_offset: 0.0
        joint_offset: 0.0
        group: HEAD
