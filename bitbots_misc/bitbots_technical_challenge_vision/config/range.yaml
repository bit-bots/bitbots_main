bitbots_technical_challenge_vision:
  blue_lower_h: {
    type: int,
    default_value: 92,
    description: "hue value of the lower boundary for blue obstacles",
    validation: {
      bounds<>: [0, 179]
    }
  }
  blue_upper_h: {
    type: int,
    default_value: 110,
    description: "hue value of the upper boundary for blue obstacles",
    validation: {
      bounds<>: [0, 179]
    }
  }
  blue_lower_s: {
    type: int,
    default_value: 90,
    description: "separation value of the lower boundary for blue obstacles",
    validation: {
      bounds<>: [0, 255]
    }
  }
  blue_upper_s: {
    type: int,
    default_value: 236,
    description: "separation value of the upper boundary for blue obstacles",
    validation: {
      bounds<>: [0, 255]
    }
  }
  blue_lower_v: {
    type: int,
    default_value: 0,
    description: "value value of the lower boundary for blue obstacles",
    validation: {
      bounds<>: [0, 255]
    }
  }
  blue_upper_v: {
    type: int,
    default_value: 255,
    description: "value value of the upper boundary for blue obstacles",
    validation: {
      bounds<>: [0, 255]
    }
  }
  red_lower_h: {
    type: int,
    default_value: 138,
    description: "hue value of the lower boundary for red obstacles",
    validation: {
      bounds<>: [0, 179]
    }
  }
  red_upper_h: {
    type: int,
    default_value: 179,
    description: "hue value of the upper boundary for red obstacles",
    validation: {
      bounds<>: [0, 179]
    }
  }
  red_lower_s: {
    type: int,
    default_value: 78,
    description: "separation value of the lower boundary for red obstacles",
    validation: {
      bounds<>: [0, 255]
    }
  }
  red_upper_s: {
    type: int,
    default_value: 255,
    description: "separation value of the upper boundary for red obstacles",
    validation: {
      bounds<>: [0, 255]
    }
  }
  red_lower_v: {
    type: int,
    default_value: 0,
    description: "value value of the lower boundary for red obstacles",
    validation: {
      bounds<>: [0, 255]
    }
  }
  red_upper_v: {
    type: int,
    default_value: 255,
    description: "value value of the upper boundary for red obstacles",
    validation: {
      bounds<>: [0, 255]
    }
  }
  min_size: {
    type: int,
    default_value: 20,
    description: "minimum size of an obstacle to be considered",
    validation: {
      gt_eq<>: 0
    }
  }
  max_size: {
    type: int,
    default_value: 400,
    description: "maximum size of an obstacle to be considered",
    validation: {
      gt_eq<>: 0
    }
  }
  debug_mode: {
    type: bool,
    default_value: false,
    description: "set true if debug images should be drawn and published",
  }
