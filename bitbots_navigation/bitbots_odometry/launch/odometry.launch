<launch>
    <arg name="sim" default="false"/>
    <let name="tf_prefix" value="$(eval '\'$(env ROS_NAMESPACE not_defined)\' if \'$(env ROS_NAMESPACE not_defined)\' != \'not_defined\' else \'\'')"/>

    <let if="$(env IS_ROBOT false)" name="taskset" value="taskset -c 5"/>
    <let unless="$(env IS_ROBOT false)" name="taskset" value=""/>

    <node name="odometry_fuser" pkg="bitbots_odometry" exec="odometry_fuser" launch-prefix="$(var taskset)">
        <param name="base_link_frame" value="$(var tf_prefix)base_link"/>
        <param name="r_sole_frame" value="$(var tf_prefix)r_sole"/>
        <param name="l_sole_frame" value="$(var tf_prefix)l_sole"/>
        <param name="odom_frame" value="$(var tf_prefix)odom"/>
        <param name="rotation_frame" value="$(var tf_prefix)rotation"/>
        <param name="cop_frame" value="$(var tf_prefix)cop"/>
        <param name="use_sim_time" value="$(var sim)"/>
    </node>

    <group unless="$(var sim)">
        <node name="walk_support_state_detector" pkg="bitbots_odometry" exec="walk_support_state_detector" launch-prefix="$(var taskset)">
        <!-- for the normal walk_support_state_detector_default values are set and do not need to be loaded-->

        </node>
    </group>
    <group if="$(var sim)">
        <node name="walk_support_state_detector" pkg="bitbots_odometry" exec="walk_support_state_detector" launch-prefix="$(var taskset)">
            <param name="use_sim_time" value="$(var sim)"/>
            <param from="$(find-pkg-share bitbots_odometry)/config/odometry_config_sim.yaml"/>
    </node>
    </group>


</launch>
