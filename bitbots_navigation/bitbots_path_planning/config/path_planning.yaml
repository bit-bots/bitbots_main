bitbots_path_planning:
  ros__parameters:
    base_footprint_frame: base_footprint
    tf_buffer_duration: 5.0
    rate: 20.0
    map:
      planning_frame: map
      resolution: 20  # Pixel per meter
      size:
        x: 11.0
        y: 8.0
      ball_update_topic: ball_relative_filtered
      robot_update_topic: robots_relative_filtered
      ball_diameter: 0.13
      obstacle_value: 50
      inflation:
        dialte: 3
        blur: 13
    controller:
      # The distance to the carrot that we want to reach on the path
      carrot_distance: 20
      # The maximum rotation velocity of the robot in rad/s around the z-axis
      max_rotation_vel: 0.4
      # Maximum velocity we want to reach in different directions (base_footprint coordinate system)
      max_vel_x: 0.15
      min_vel_x: -0.1
      max_vel_y: 0.05
      # This is the time constant of the exponential smoothing filter. The higher the value, the more smoothing is applied.
      # It denotes the time after which a unit step function input signal reaches 63% (1-1/e) of its original strength. 
      # In other words, it denotes the time it takes for a new input to be 63% integrated into the output.
      # It is update rate independent!
      smoothing_tau: 0.5
      # Integral gain to counter constant disturbances (not really tested/used)
      rotation_i_factor: 0.0
      # Clamped p gain of the rotation controller
      rotation_slow_down_factor: 0.3
      # Clamped p gain of the translation controller
      translation_slow_down_factor: 0.5
      # Distance at which we switch from orienting towards the path to orienting towards the goal poses orientation (in meters)
      orient_to_goal_distance: 1.0
